# funcion main()

snippet main
	int main(int argc, const char *argv[]){
		${1}
		return 0;
	}
# #include <...>

snippet inc
	#include <${1:stdio}.h>
	${2}

# #include "..."
#snippet Inc
#	#include "${1:`Filename("$1.h")`}"${2}
# #ifndef ... #define ... #endif

snippet ifndef
	#ifndef ${1}
	${2}

snippet define
	#define ${1:Simbolo} ${2:valor}
	${3}
snippet	endif
	#endif${1}
	${2}

snippet ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif
snippet #if
	#if ${1:FOO}
		${2}
	#endif
# Header Include-Guard
# (the randomizer code is taken directly from TextMate; it could probably be
# cleaner, I don't know how to do it in vim script)
snippet once
	#ifndef ${1:`toupper(Filename('', 'UNTITLED').'_'.system("/usr/bin/ruby -e 'print (rand * 2821109907455).round.to_s(36)'"))`}

	#define $1
	${2}

	#endif /* end of include guard: $1 */
# Condicion if/else
snippet if
	if (${1:/*  condicion */}) {
		${2:/* codigo */}
	} 
snippet else
	else { 
		${1}
	} 
# Tertiary conditional
snippet t
	${1:/* condicion */} ? ${2:a} : ${3:b}
# Do while 
snippet do
	do { 
		${2:/* codigo */}
	} while (${ 1:/* condicion */});
# While 
snippet while
	while (${1:/* condicion */}) {
		${2:/* codigo */}
	}  
# For Loop
snippet for
	for (${2:i} = 0;  $2 < ${1:contador}; $2${3:++}) {
		${4:/* codigo */}
	} 
# Custom For Loop
snippet forr
	for (${1:i} = ${2: 0}; ${3:$1 < 10}; $1${4:++}) {
		${5:/* codigo */}
	} 
#Como parte importante de switch case tendra su propio snippet
#switch
snippet	switch
	switch(${1:/* condicion */})
	{
		${2:/* casos */}
		default:
			${3}
	}
snippet case
	case ${1:/* valor */}:
		${2:/* codigo */}
		break;
	${3}
# Funcion
snippet fun
	${1 :void} ${2:nomb re_funcion}(${3})
	{
		${4:/* codigo */}
	}
# Declaracion de una funcion
snippet fund
	${1:void} ${2:function_name}(${3});
	${4} 
# Typedef
snippet typedef
	typedef ${1:int} ${2:MyCustomType};
	${3} 
# Struct
snippet struct
	struc t ${1:`Filename('$1_t', 'name')`} {
		${2:/* datos */}
	}${3:  /* optional var iable list */};
	${4}
#union 
snippet union
	union ${1:nombre_union}{
		${2:/* datos */}
	}${3:numero}
	${4}
# Typedef struct
snippet tds
	typedef struct ${2:_ $1 }{
		${3:/* data */}
	} ${1: `Filename('$1_t', 'name')`};
# Typdef enum
snippet tde
	typedef  enum { 
		${1:/* data */}
	} ${2:foo};
########################################################
##  Iniciamos con los snippets de la funcion stdio.h  ##
########################################################
snippet printf
	printf("${1:%s}\n"${2});
	${3} 
snippet fprintf
	fprintf(${1:stderr}, "${2:%s}\n"${3});${4}
snippet .
	[${1}]${2}
snippet	scanf
	scanf("${1:variables}",${2});
	${3}


###################
##  Variables	 ##
###################
snippet int
	int ${1:valor_entero};
	${2}

snippet float
	float ${1:valor_flotante};
	${2}

snippet char
	char ${1:valor_caracter};
	${2}

snippet	double
	double ${1:valor_double};

snippet unsigned
	unsigned ${1}


